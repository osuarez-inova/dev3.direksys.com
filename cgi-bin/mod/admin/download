#!/usr/bin/perl

#######################################################################
#######################################################################
#######################################################################
use CGI qw/:standard :html3/;
use DBI;
use DBIx::Connector;
use DBD::mysql;


# Load the form information and set the config file and userid.
local(%in) = &parse_form;
local($sid,%error,%va,%trs,%perm);
local ($upload_dir) = "uploads/";
local ($temp_file) = "tempexp.csv";
local ($err_file) = "temperr.csv";

$in{'sid'} ? ($sid   = $in{'sid'}): ($sid   = '');

# Required Libraries
# --------------------------------------------------------
eval {
	require ("../common/subs/auth.cgi");
	require ("../common/subs/sub.base.html.cgi");
	require ("upfile.cfg");
};
if ($@) { &cgierr ("Error loading required libraries,100,$@"); }

eval { &main; };
if ($@) { &cgierr("Fatal error,501,$@ $!"); }

exit;

sub main {
# --------------------------------------------------------
# Created :  Carlos Haas 01/01/2007 6:47:28 PM
# Last Update : 
# Locked by : 
# Description :
#
#
	$|++;
	&connect_db;
	&auth_cleanup;
	my ($status) = &auth_check_password;
	$in{'sit_app'} = 'download_';
	#&cgierr('Aquí');
	if($in{'cmd'}eq'mer_prototypes'){
		&prototypes_download;
	}else{
		;#&html_message;
	}
}


sub prototypes_download{
# --------------------------------------------------------
# Forms Involved: 
# Created on: 28 Apr 2010 15:17:02
# Author: MCC C. Gabriel Varela S.
# Description :   
# Parameters :
	if(!$in{'file'} and !$in{'id_prototype'})
	{
		print "Content-type: text/html\n\n";
		print "Nombre de archivo no proporcionado";
	}
	else
	{
		$in{'db'}="sl_prototype";
		&auth_logging('File downloaded: '.$in{'file'},$in{'id_prototype'});
		my ($file) = $cfg{'path_shpfiles'}.$in{'id_prototype'}.$in{'file'};
		open (DWN, "<$file") or &cgierr ("Unable to open: $file",230,$!);
		print "Content-Type:application/x-download\n";   
		print "Content-Disposition:attachment;filename=$in{'file'}\n\n";
		while (<DWN>) {
			$line = $_;
			print $line;
		}
		close DWN;
	}
}

################################################################
################################################################
################################################################
################################################################

sub parse_form {
# --------------------------------------------------------
# Created :  Carlos Haas 01/01/2007 6:47:28 PM
# Last Update : 
# Locked by : 
# Description :
#
#
	my (%in, $value);
	if ($ENV{'REQUEST_METHOD'} ne 'GET' and $ENV{'REQUEST_METHOD'} ne 'POST') {
		&cgierr ("This script must be called from the Web\nusing either GET or POST requests\n\n");
	}
	PAIR: foreach $key (param){
		$value = param($key);
		$value =~ s/<!--(.|\n)*-->//g;			# Remove SSI.
		$value =~ s/\r//g;
		if ($value eq "---") { next PAIR; }		# This is used as a default choice for select lists and is ignored.
		if ($value =~ /^\s*$/) { next PAIR; }		# This is used as a default choice for select lists and is ignored.
		(exists $in{$key}) ?
			($in{$key} .= "~~$value") :		# If we have multiple select, then we tack on
			($in{$key}  = $value);
		$in{$key} = $value;
	}
	return %in;
}

##################################################################
#     CGIERR   	#
##################################################################
sub cgierr {
# --------------------------------------------------------
# Created :  Carlos Haas 01/01/2007 6:47:28 PM
# Last Update : 
# Locked by : 
# Description :
#
#
# Last Modified on: 11/10/08 12:12:47
# Last Modified by: MCC C. Gabriel Varela S: Se corrige la forma de mostrar la fecha
	my (@sys_err) = @_;
	print "Content-type: text/html\n\n";

	my ($key,$env,$out_in,$out_env);
	if (!$cfg{'cd'}){
		print qq|
			<head>
				<title>CGI - ERROR</title>
			</head>					
			<body BGCOLOR="#FFFFFF" LINK="#FF0000" VLINK="#FF0000" ALINK="#FF0000">			
				<table BORDER="0" WIDTH="500" CELLPADDING="10" CELLSPACING="10">
					<tr>
						<td BGCOLOR="#FF0000" colspan="2"><font size="5" color="#FFFFFF" face="Arial"><b>CGI-Error</b></font></td>
					</tr>
				</table>
				<table BORDER="0" WIDTH="550" CELLPADDING="2" CELLSPACING="0">|;
					$sys_err[0]	and print "\n<tr>\n  <td valign='top' width='200'><font face='Arial' size='3'>Error Message</font></td>\n  <td><font face='Arial' size='3' color='#FF0000'><b>$sys_err[0]</b></font></td>\n</tr>\n";
					$sys_err[1]	and print "<tr>\n  <td width='200'><font face='Arial' size='2'>Error Code</font></td>\n  <td><font face='Arial' size='2'>$sys_err[1]</font></td>\n";
					$sys_err[2]	and print "<tr>\n  <td valign='top' width='200'><font face='Arial' size='2'>System Message</font></td>\n  <td><font face='Arial' size='2'>$sys_err[2]</font></td>\n";
					print qq|
					<tr>
						<td colspan="2"><p>&nbsp</p><font face='Arial' size='2'>If the problem percist, please contact us with the above Information.</font><br>
							<font face='Arial' size='2'><a href="mailto:$systememail">$systememail</a></font>
						</td>
					</tr>
				</table>
			</body>
		</html>|;
		######################################
		### Save CGI ERR			
		##############################
		my ($ip);
		my (@outmsg) = @sys_err;
		my ($sec, $min, $hour, $day, $mon, $year, $dweek, $dyear, $daylight) = localtime(time());
		$year+=1900;
		$mon++;
		my ($time,$date) = ("$hour:$min:$sec","$mon-$day-$year");
		
		foreach $key (sort keys %in) {
			$outmsg[3] .= "$key=$in{$key},";
		}
		
		foreach $env (sort keys %ENV) {
			$outmsg[4] .= "$env=$ENV{$env},";
		}
		
		for (0..4){
			$outmsg[$_] =~ s/\n|\r/ /g;
			$outmsg[$_] =~ s/\|/ /g;
		}
		
		if ($ENV{'REMOTE_ADDR'}){
			$ip = $ENV{'REMOTE_ADDR'};
		}elsif ($ENV{'REMOTE_HOST'}){
			$ip = $ENV{'REMOTE_HOST'};
		}elsif ($ENV{'HTTP_CLIENT_IP'}){
			$ip = $ENV{'HTTP_CLIENT_IP'};
		}else{
			$ip = "Unknow";
		}
		(!$cfg{'cgierr_log_file'}) and ($cfg{'cgierr_log_file'} = './logs/cgierr.log');
		if (open (LOG, ">>$cfg{'cgierr_log_file'}")){;
			print LOG "$usr{'username'}|$outmsg[0]|$outmsg[1]|$outmsg[2]|$outmsg[3]|$outmsg[4]|$time|$date|$ip\n";
			close AUTH;
		}
	}else{
		print "<PRE>\n\nCGI ERROR\n==========================================\n";
					$sys_err[0]	and print "Error Message       : $sys_err[0]\n";
					$sys_err[1]	and print "Error Code          : $sys_err[1]\n";
					$sys_err[2]	and print "System Message      : $sys_err[2]\n";
					$0			and print "Script Location     : $0\n";
					$]			and print "Perl Version        : $]\n";
					$sid		and print "Session ID          : $sid\n";


		print "\nForm Variables IN\n-------------------------------------------\n";
		
		foreach $key (sort keys %in) {
			my $space = " " x (20 - length($key));
			$out_in .= "$key=$in{$key},";
			print "$key$space: $in{$key}\n";
		}
		
		print "\nForm Variables ERROR\n-------------------------------------------\n";
		foreach $key (sort keys %error) {
			my $space = " " x (20 - length($key));
			print "$key$space: $error{$key}\n";
		}
		
		print "\nEnvironment Variables\n-------------------------------------------\n";
		foreach $env (sort keys %ENV) {
			my $space = " " x (20 - length($env));
			$out_env .= "$env=$ENV{$env},";
			print "$env$space: $ENV{$env}\n";
		}
		
		print "\n</PRE>";

	}

	exit -1;
}