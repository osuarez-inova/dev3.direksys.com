#!/usr/bin/perl
#######################################################################
#######################################################################
#######################################################################
use DBI;
use DBIx::Connector;
use DBD::mysql;

# Load the form information and set the config file and userid.
local(%in) = &parse_form;
local(%config, %cfg, %usr);

# Required Libraries
# --------------------------------------------------------
eval {
	require ("../subs/auth.cgi");
	require ("../subs/sub.base.html.cgi");
	require ("../subs/sub.func.html.cgi");
};

if ($@) { &cgierr ("Error loading required Libraries",300,$@); }

eval { &main; };
if ($@) { &cgierr("Fatal error, 301, $@"); }

exit;

sub main {	
	$|++;
	print "Content-type: text/html\n\n";

	# aplico la 3 porque este proceso fue dise√±ado para MUFAR
	$in{'e'} = 3 if (!$in{'e'});
	
	&load_settings;

	$sys{'fmt_curr_decimal_digits'} = 2 if(!$sys{'fmt_curr_decimal_digits'});

	print "<h4>DIREKSYS($in{'e'}) - CARGA MASIVA DE ORDENES DE VENTA</h5>";
	my $email_text = 'Cargado masivo de Ordenes -- '.localtime."\n";

	# Numero de orden de cliente
	if (!$in{'no'}){
		print "<span style='color:red;'>NO SE ENVIO EL NO DE ORDEN DE COMPRA DEL CLIENTE.</span><br>";
	}else{

		&connect_db;
		# paso 1 - revisar si en el folder configurado existen los 2 archivos y podrian ser del tipo csv | xls | xlsx
		# consultar con robert este detalle
		$dir = $cfg{'path_sanborns_layouts'};
		if($in{'customer'}){ 
			$id_customer = $in{'customer'};#100105;# ----------------------------------------------->customer ID - SANBORNS
		}else{
			$id_customer = 100105;
		}

		if(-e $dir and $in{'no'}) {

			# cambiar a nombre archivo dinamico
			$file1 = 'resumen_'.$in{'no'}.'.csv';
			$file2 = 'detalle_'.$in{'no'}.'.csv';
			$dir1 = $dir.$file1;
			$dir2 = $dir.$file2;

			if(-r $dir1 and -r $dir2) {
				print "abriendo: ".$dir1." <br>";

				my $OC_SANBORNS='NULL';

				# lee archivo 1
				# paso 2 - una vez que se encuentre el archivo hay que recorrer primero el que tiene el resumen
				my ($string) = '';
				my ($registers1) = 0;
				my (@product, @cve_product, @product_price, @product_tax);

				if(-r $dir1 and open (FILE, $dir1)) {
					
					print "<br><table width='100%' cellpadding='3' border='1' style='font-family:verdana;font-size:10px'>";
					print "<tr>";
					print "		<th>ID PARTS</th>";
					print "		<th>UPC</th>";
					print "		<th>PRECIO DIREKSYS</th>";
					print "		<th>PRECIO REQUEST</th>";
					print "		<th>COMMENTS</th>";
					print "</tr>";

					my $errors=0;

					if($in{'process'} eq 'commit') {
						&Do_SQL("START TRANSACTION;");
					}
					while ($record = <FILE>) {
						chomp $record;
						$registers1++;

						my ($err_messages2);
						if ($record =~ m/\"/) {
							$errors++;
							$err_messages2 = qq|<span style='color:red;'>ERROR DETECTADO EN $dir1: $record </span><br>|;
						}

						my @fields = split "," , $record;
						
						## si el campo 2 empieza con  comillas y hay un campo  3 y 4 esta pasando basura y es necesario corregirlo
						if($fields[2] =~ m/\"/ and $fields[3] and $fields[4]) {
							$fields[2] = $fields[2].$fields[3];
							$fields[3] = $fields[4];
						}

						my $field_id_product = $fields[0];
						my $field_desc_product = $fields[1];
						my $field_qty_product = $fields[2];
						my $field_price_product = $fields[3];
						my $field_tax_product = $fields[4];

						if ($field_id_product ne '' and $field_price_product ne '' and $field_tax_product ne ''){
							
							$OC_SANBORNS = $fields[5] if ($fields[5]); # ----------------ORDEN DE COMPRA DEL CLIENTE

							# limpiando campo de caracteres de formato
							$fields[2] =~ s/[\" \$]//g;

							$product[$registers1] = $field_id_product;
							$cve_product[$registers1] = $field_desc_product;
							$product_qty[$registers1] = $field_qty_product;
							$product_price[$registers1] = $field_price_product;
							$product_tax_percent[$registers1] = $field_tax_product;

							## como los costos del producto son sin impuesto, hay que calcular el impuesto y el total
							## precio neto
							my $tax = $field_tax_product / 100;
							my $tax_product = $field_price_product * $tax;
							$tax_product = sprintf("%.".$sys{'fmt_curr_decimal_digits'}."f", $tax_product);
							my $price_product_wtax = $field_price_product + $tax_product;

							$product_tax[$registers1] = $tax_product;
							$product_price_wtax[$registers1] = $price_product_wtax;

							# CLAVE IDENTIFICADOR DEL PRODUCTO | DESCRIPCION DEL PRODUCTO | PRECIO |  IVA % | IVA CANTIDAD | PRECIO CON IMPUESTO

							# Se agrega una validacion extra para detectar que los productos solicitados existan antes de ejecutar cualquier proceso.
							
							
							my ($sth) = &Do_SQL("SELECT (SELECT SPrice FROM sl_customers_parts WHERE ID_customers='$id_customer' AND ID_parts=sl_skus.ID_products)as SPrice, sl_skus.ID_sku_products as ID_parts FROM sl_skus 
							WHERE 1 AND sl_skus.UPC='$field_id_product';");
							my ($price_direksys, $id_parts_direksys) = $sth->fetchrow_array();
							my $err_messages='';

							print "<tr>";
							print "		<td>$id_parts_direksys</td>";
							print "		<td>$field_id_product</td>";
							print "		<td>$price_direksys</td>";
							print "		<td>$field_price_product</td>";
							
							if (!$id_parts_direksys){
								$errors++;
								$err_messages.="<span style='color:red;'>EL PRODUCTO $field_id_product NO FUE ENCONTRADO EN EL DIREKSYS.</span><br>";
							}elsif ($price_direksys != $field_price_product){
								$errors++;
								$err_messages.="<span style='color:red;'>EL PRECIO DEL PRODUCTO $field_id_product NO COINCIDE CON EL PRECIO EN DIREKSYS.</span><br>";
							}
							
							print "		<td>$err_messages2$err_messages</td>";
							print "</tr>";
						}

					}
					print "</table><br>";

					if(-r $dir2 and open (FILE, $dir2)) {
						while ($record = <FILE>) {
							chomp $record;
							$registers2++;

							if ($record =~ m/\"/) {
								$errors++;
								print qq|<span style='color:red;'>ERROR DETECTADO EN $dir2: $record </span><br>|;
							}
						}
					}else{
						$errors++;
						print qq|<span style='color:red;'>$dir2 no encontrado </span><br>|;
					}



					if($registers1 > 0) {
						print "$registers1 records found in dir1"." <br>";
						if ($errors++){
							print "SE ENCONTRARON ERRORES EN EL PROCESO, CORRIJALOS PARA CONTINUAR:<br>";
							return;
						}
					}else {
						print "no records found in dir1"." <br>";
						return;
					}

					close FILE;
					

				}else{
					print "<span style='color:red;'>$dir1 no encontrado </span><br>";
					return;
				}
				if($in{'process'} eq 'analyze' or $in{'process'} eq 'commit'){
					if ($OC_SANBORNS != $in{'no'}){
						print "<span style='color:red;'>EL NO DE ORDEN DE COMPRA NO COINCIDE CON LA INFORMACION DEL ARCHIVO.</span><br>";				
						return;
					}else{
						
						my ($sth) = &Do_SQL("SELECT COUNT(*) FROM sl_orders WHERE sl_orders.ID_orders_alias='$OC_SANBORNS' AND sl_orders.ID_customers='$id_customer'");
						my $file_invalid = $sth->fetchrow_array();

						if ($file_invalid){
							print "<span style='color:red;'>YA EXISTEN ORDENES DE VENTA EN DIREKSYS CON ESTE NODE ORDEN DE COMPRA.</span><br>";				

							return if (!$in{'forced'});
						}
					}

					print "abriendo: ".$dir2." <br>";;
					
					# lee archivo 2
					my ($registers2) = 0; # lo limitaremos al no de productos que obtuvimos arriba
					my (@office_key, @office_desc,);
					if(-r $dir2 and open (FILE, $dir2)) {		
						while ($record = <FILE>) {
							chomp $record;
							$registers2++;

							if ($record =~ m/\"/) {
								$errors++;
								$err_messages2 = qq|<span style='color:red;'>ERROR DETECTADO EN: $record </span><br>|;
								print qq|<span style='color:red;'>ERROR DETECTADO EN $dir2: $record </span><br>|;
							}

							my @fields = split "," , $record;


							# limpiando campo de caracteres de formato
							if($fields[0]) {
								# $fields[0] =~ s/[\" \$]//g;
								if($fields[0] =~ m/\-/ ) {
									my @fields2 = split "-" , $fields[0];

									$office_key[$registers2] = $fields2[0];
									$office_desc[$registers2] = $fields2[1];
								}
							}

							$customer_code = $office_key[$registers2];
							$customer_alias = $office_desc[$registers2];


							#podriamos poner en la nota el nombre del archivo del que se obtuvo la informacion
							$orders_notes = 'Esta Orden fue creada por procesamiento de Carga Masiva de Direksys.';

							# por cada registro(tienda) se crea una orden
							# hasta  esta parte ya debo conocer el id del cliente y sus respectivos datos
							# voy a ir a buscar su ultima compra y me voy a traer sus datos

							my ($sth_last_order) = &Do_SQL("SELECT * FROM sl_orders WHERE ID_customers = '$id_customer' LIMIT 1;");
							$rec_last_order = $sth_last_order->fetchrow_hashref;
							
							my ($sth_customer) = &Do_SQL("SELECT *, (SELECT ifnull(CreditDays,0) FROM sl_terms WHERE Type='Sales' AND Status='Active' AND Name=sl_customers.Pterms LIMIT 1)CreditDays FROM sl_customers WHERE ID_customers = '$id_customer';");
							$rec_customer = $sth_customer->fetchrow_hashref;

							# datos del envio de la tienda correspondiente
							if ($customer_code ne '' and $customer_alias ne ''){
								if($in{'customer'} ne '100090'){
									$fields[0] =~ s/^\s+|\s+$//g;
									#$query="SELECT * FROM cu_customers_addresses WHERE ID_customers=$id_customer AND Code = '$fields[0]' LIMIT 1;";
									$query="SELECT * FROM cu_customers_addresses WHERE ID_customers=$id_customer AND Alias like ('%$customer_code%-%$customer_alias%') LIMIT 1;";
								}else{
									$customer_code =~ s/^\s+|\s+$//g;
									$customer_alias =~ s/^\s+|\s+$//g;
									$query="SELECT * FROM cu_customers_addresses WHERE ID_customers=$id_customer AND Alias like ('%$customer_alias%') LIMIT 1;";
									#$query="SELECT * FROM cu_customers_addresses WHERE ID_customers=$id_customer AND Alias like ('%$customer_code%-%$customer_alias%') LIMIT 1;";
									#$query="SELECT * FROM cu_customers_addresses WHERE ID_customers=$id_customer AND Code = '$customer_code-$customer_alias' LIMIT 1;";
								}
								my ($sth_customer_shpaddress) = &Do_SQL($query);
								$rec_customershpaddress = $sth_customer_shpaddress->fetchrow_hashref;
							}else{
								$rec_customershpaddress=0;
							}
							
							# revisar si el cliente existe
							# si existe entonces crea la orden con sus datos
							my $id_customers_addresses = int($rec_customershpaddress->{'ID_customers_addresses'});
							if (int($rec_customer->{'ID_customers'}) > 0 and $id_customers_addresses > 0) {
								##si hay shpaddress entonces shpaddress sino entonces la del customer
								if($rec_customershpaddress->{'ID_customers_addresses'} > 0) {
									$rec_customer->{'Address1'} = $rec_customershpaddress->{'Address1'};
									$rec_customer->{'Address2'} = $rec_customershpaddress->{'Address2'};
									$rec_customer->{'Address3'} = $rec_customershpaddress->{'Address2'};
									$rec_customer->{'Urbanization'} = $rec_customershpaddress->{'Urbanization'};
									$rec_customer->{'City'} = $rec_customershpaddress->{'City'};
									$rec_customer->{'State'} = $rec_customershpaddress->{'State'};
									$rec_customer->{'Zip'} = $rec_customershpaddress->{'Zip'};
									$rec_customer->{'Country'} = $rec_customershpaddress->{'Country'};
								}

								if($in{'process'} eq 'commit') {
									$sth_order = &Do_SQL("INSERT INTO sl_orders SET ID_orders=NULL,  trackordernumber=NULL,  ID_customers=".$id_customer.", ID_orders_alias='".$OC_SANBORNS."'
										,  Pterms='".$rec_customer->{'Pterms'}."'
										,  Ptype='Deposit'
										,  id_customers_addresses='".$rec_customershpaddress->{'ID_customers_addresses'}."'
										,  Address1='".$rec_customer->{'Address1'}."'
										,  Address2='".$rec_customer->{'Address2'}."'
										,  Address3='".$rec_customer->{'Address3'}."'
										,  Urbanization='".$rec_customer->{'Urbanization'}."'
										,  City='".$rec_customer->{'City'}."'
										,  State='".$rec_customer->{'State'}."'
										,  Zip='".$rec_customer->{'Zip'}."'
										,  Country='".$rec_customer->{'Country'}."'
										,  BillingNotes=NULL,  shp_type=1,  shp_name=NULL
										,  shp_Address1='".$rec_customer->{'Address1'}."'
										,  shp_Address2='".$rec_customer->{'Address2'}."'
										,  shp_Address3='".$rec_customer->{'Address3'}."'
										,  shp_Urbanization='".$rec_customer->{'Urbanization'}."'
										,  shp_City='".$rec_customer->{'City'}."'
										,  shp_State='".$rec_customer->{'State'}."'
										,  shp_Zip='".$rec_customer->{'Zip'}."'
										,  shp_Country='".$rec_customer->{'Country'}."'
										,  shp_Notes=NULL,  ID_zones=0,  OrderNotes='$orders_notes'
										,  OrderQty=0.00,  OrderShp=0.00,  OrderDisc=0.00,  OrderTax=0.16,  OrderNet=NULL,  ID_salesorigins=5,  ID_pricelevels=99,  dayspay=NULL,  ID_orders_related=0
										,  question1=NULL,  answer1=NULL,  question2=NULL,  answer2=NULL,  question3=NULL,  answer3=NULL,  question4=NULL,  answer4=NULL,  question5=NULL,  answer5=NULL,  repeatedcustomer='Yes',  Coupon=0,  Flags=0,  DNIS=0,  ID_mediacontracts=0,  DIDS7=0,  Letter=0,  ID_warehouses=0,  first_call=NULL
										,  language='spanish',  StatusPrd='None',  StatusPay='None',  Status='New',  Date=CURDATE(),  Time=CURTIME(),  ID_admin_users=1");
									$id_orders_new = $sth_order->{'mysql_insertid'};
								}
								
								if (int($id_orders_new)>0) {
									print "<br>SE CREO LA ORDEN <strong>$id_orders_new</strong> PARA EL CLIENTE <strong>$id_customer</strong>, SUCURSAL <strong>$customer_code - $customer_alias</strong> EN EL SISTEMA.<br>";
									$email_text .= "Se creo la Oorden No.: $id_orders_new para el Cliente ID: $id_customer, en el sistema.\n";

									# de 1 hasta el numero de productos indicados arriba, se hace el recorrido de cada producto agregando cuantos quiere para esta tienda de cada uno
									# Inserta los productos	
									my $qty;
									my $total = 0;
									my $tax = 0;
									my $SalePrice = 0;
									my $ID_products = 100000000;

									my $total_OrderQty = 0;
									my $total_OrderTax = 0;
									my $total_OrderNet = 0;					

									for my $i(1..$registers1) {
										$qty = int($fields[$i]);

										$product_price[$i] =~ s/ \$//g;

										$SalePrice = $product_price[$i] * $qty;
										$tax = $SalePrice * ($product_tax_percent[$i] / 100);

										### para que pueda insertar la cantidad debe ser ,mayor que cero
										if($qty > 0) {

											# una validacion mas, confirmamos que el producto exista y este activo
											my $id_parts = $product[$i];
											$sth_val_parts = &Do_SQL("SELECT (SELECT SPrice FROM sl_customers_parts WHERE ID_customers=100105 AND ID_parts=sl_skus.ID_products)as SPrice, sl_skus.ID_sku_products as ID_parts FROM sl_skus WHERE 1 AND sl_skus.UPC='".$id_parts."' AND sl_skus.Status='Active'");
											 # "SELECT 400000000+ID_parts as ID_parts FROM sl_customers_parts INNER JOIN sl_parts USING (ID_parts) WHERE ID_customers=$id_customer AND sku_customers='$id_parts' AND sl_parts.Status='Active'"
											$rec_parts = $sth_val_parts->fetchrow_hashref;

											if (int($rec_parts->{'ID_parts'}) > 0) {

												$sth_parts = &Do_SQL("INSERT INTO sl_orders_products SET
													ID_orders_products = NULL
													, ID_products=".$ID_products."
													, ID_orders=".$id_orders_new."
													, ID_packinglist=0
													, Related_ID_products=".$rec_parts->{'ID_parts'}."
													, Quantity=".$qty."
													, SalePrice=".($qty * $product_price[$i])."
													, Shipping=0
													, Cost=0
													, Tax=".$tax."
													, Tax_percent=".($product_tax_percent[$i] / 100)."
													, Discount=0
													, FP=1
													, Status='Active'
													, Date=Curdate()
													, Time=NOW()
													, ID_admin_users=1");
												
												# /*, ShpDate=DATE_SUB('$due_date',INTERVAL $p_terms DAY)
												# , PostedDate=DATE_SUB('$due_date',INTERVAL $p_terms DAY)*/
												
												$total_OrderQty += $qty;
												$total_OrderTax += $tax;
												$total_OrderNet += $SalePrice;

												if ($rec_parts->{'SPrice'} == $product_price[$i]){
													print 'SE AGREGAN <strong>'.$qty.'</strong> PIEZAS DEL PRODUCTO <strong>'.$rec_parts->{'ID_parts'}."-".$cve_product[$i].'</strong> COSTO DIREKSYS '.&format_price($rec_parts->{'SPrice'}).' COSTO NUEVO <strong>'.&format_price($product_price[$i]).'</strong> A LA ORDEN.<br>';
												}else{
													print '<span style="color:red;">SE AGREGAN <strong>'.$qty.'</strong> PIEZAS DEL PRODUCTO <strong>'.$rec_parts->{'ID_parts'}."-".$cve_product[$i].'</strong> COSTO DIREKSYS '.&format_price($rec_parts->{'SPrice'}).' COSTO NUEVO <strong>'.&format_price($product_price[$i]).'</strong> A LA ORDEN.</span><br>';
												}

												$email_text .= 'Se agregan '.$qty.' piezas del producto "'.$rec_parts->{'ID_parts'}."-".$cve_product[$i].'" a la Orden '.$id_orders_new.".\n";


												# $ID_products++;
												$ID_products+=1000000;
											}else {
												print '<br><span style="color:red;">NO FUE POSIBLE AGREGAR EL PRODUCTO <strong>'.$rec_parts->{'ID_parts'}."-".$product[$i].'</strong> A LA ORDEN<span style="color:red;">.';
												$email_text .= "No fue posible agregar el producto $cve_product[$i] a la Orden $id_orders_new.\n";

											}
										}

									}

									# suma las catidades de productos de una misma tienda para generar una orden por tienda
									# hay q sumar y hacer un update sobre sl_orders y listo
									print '<br>total_OrderQty = '.$total_OrderQty;
									print '<br>total_OrderTax = '.$total_OrderTax;
									print '<br>total_OrderNet = '.$total_OrderNet;
									
									$email_text .= "Los totales de la Orden '.$id_orders_new.'. son los siguientes:\n";
									$email_text .= 'OrderQty = '.$total_OrderQty."\n";
									$email_text .= 'OrderTax = '.$total_OrderTax."\n";
									$email_text .= 'OrderNet = '.$total_OrderNet."\n";

									my $total_Order = $total_OrderNet + $total_OrderTax;

									&Do_SQL("UPDATE sl_orders SET OrderQty=$total_OrderQty, OrderNet=$total_OrderNet WHERE ID_orders=".$id_orders_new);
										
									# ---------------------- Pago de la Orden 
									my ($sth_ord_payments) = &Do_SQL("INSERT INTO `sl_orders_payments` (`ID_orders_payments`, `ID_orders`, `Type`, `PmtField1`, `PmtField2`, `PmtField3`, `PmtField4`, `PmtField5`, `PmtField6`, `PmtField7`, `PmtField8`, `PmtField9`, `Amount`, `Reason`, `Paymentdate`, `AuthCode`, `AuthDateTime`, `Captured`, `CapDate`, `PostedDate`, `Status`, `Date`, `Time`, `ID_admin_users`) VALUES
									(NULL, '".$id_orders_new."', 'Deposit', '', '', '', '', '', '', '', '', '', '".$total_Order."', 'Sale', DATE_ADD(CURDATE(), INTERVAL ".$rec_customer->{'CreditDays'}." DAY), '', '', NULL, NULL,'0000-00-00', 'Approved', CURDATE(), 'CURTIME()', 1 )");
									$id_orders_payments = $sth_ord_payments->{'mysql_insertid'};
									
									if (int($id_orders_payments)>0){
										print "<br>SE AGREGO EL PAGO <strong>$id_orders_payments</strong> A LA ORDEN <strong>$id_orders_new</strong>.";
										$email_text .= "Se agrego el pago $id_orders_payments a la orden $id_orders_new.\n";
									}else{
										print "<br>NO FUE POSIBLE AGREGAR EL PAGO A LA ORDEN <strong>$id_orders_new</strong>.";
										$email_text .= "No fue posible agregar el pago a la Orden $id_orders_new \n";
									}


									# ---------------------- Nota a la Orden 
									
									&add_order_notes_by_type_admin($id_orders_new,"Esta Orden fue creada por procesamiento masivo desde Direksys","Low");

									if($in{'process'} eq 'commit') {
										&Do_SQL("COMMIT;");
									}
								}else{
									print "<br>NO FUE POSIBLE CREAR LA ORDEN PARA EL CLIENTE: <strong>$id_customer</strong> SUCURSAL: <strong>$customer_code - $customer_alias</strong>";
									$email_text .= "No fue posible crear la Orden para el Cliente ".$id_customer." Sucursal $customer_code - $customer_alias.\n";
								}

							}else {
								print "<br>LA SUCURSAL $id_customers_addresses::<strong>$customer_code - $customer_alias</strong> DEL CLIENTE CON ID $id_customer NO FUE ENCONTRADO EN EL SISTEMA.";
								#print "SELECT * FROM cu_customers_addresses WHERE ID_customers=$id_customer AND Alias like ('%$customer_alias%') LIMIT 1;<br/>";
								print $query."<br/>";
								$email_text .= "El cliente con id $id_customer no fue encontrado en el sistema.\n";

							}

							print "<br>";
					
						}
						print "<br>";

						if($registers2 > 0) {
							print "$registers2 records found in dir2";
							$email_text .= "$registers2 records found in dir2.\n";

						}else {
							print "no records found in dir2";
						}

						close FILE;
					}else{
						print "<span style='color:red;'>$dir2 no encontrado </span><br>";
					}
				}

	  			&send_text_mail($cfg{'from_email'},'adiaz@inovaus.com',"Resumen de Carga masiva de ordenes.", $email_text) if($in{'process'} eq 'commit');
			}else{
				print "<span style='color:red;'>ERROR AL LEER LOS ARCHIVOS FUENTE <strong>$file1</strong> y <strong>$file2</strong>.</span><br>";
				print "$dir1<br>";
				print "$dir2<br>";
			}
		 
		}else{
			print "<span style='color:red;'>dir '$dir' not found </span><br>";
			$email_text .= "El archivo '$dir' no fue encontrado.\n";

		}

		&disconnect_db;

	}
}

#########################################################
##			Query				##
##########################################################
sub parse_form {
# --------------------------------------------------------
	my (@pairs, %in);
	my ($buffer, $pair, $name, $value);

	if ($ENV{'REQUEST_METHOD'} eq 'GET') {
		@pairs = split(/&/, $ENV{'QUERY_STRING'});
	}elsif ($ENV{'REQUEST_METHOD'} eq 'POST') {
		read(STDIN, $buffer, $ENV{'CONTENT_LENGTH'});
 		@pairs = split(/&/, $buffer);
	}else {
		&cgierr ("This script must be called from the Web\nusing either GET or POST requests\n\n");
	}
	PAIR: foreach $pair (@pairs) {
		($name, $value) = split(/=/, $pair);

		$name =~ tr/+/ /;
		$name =~ s/%([a-fA-F0-9][a-fA-F0-9])/pack("C", hex($1))/eg;
		$name = lc($name);

		$value =~ tr/+/ /;
		$value =~ s/%([a-fA-F0-9][a-fA-F0-9])/pack("C", hex($1))/eg;

		$value =~ s/^\s+//g;
		$value =~ s/\s+$//g;

		#$value =~ s/\r//g;
		$value =~ s/<!--(.|\n)*-->//g;			# Remove SSI.
		if ($value eq "---") { next PAIR; }		# This is used as a default choice for select lists and is ignored.
		(exists $in{$name}) ?
			($in{$name} .= "|$value") :		# If we have multiple select, then we tack on
			($in{$name}  = $value);			# using the ~~ as a seperator.
	}
	return %in;
}

##################################################################
#     CGIERR   	#
##################################################################
sub cgierr {
# --------------------------------------------------------
# Last Modified on: 11/10/08 11:58:21
# Last Modified by: MCC C. Gabriel Varela S: Se corrige la forma de mostrar la fecha
	my (@sys_err) = @_;
	print "Content-type: text/html\n\n";

	my ($key,$env,$out_in,$out_env);
	if (!$cfg{'cd'}){
		print qq|
						<head>
										<title>CGI - ERROR</title>
						</head>					
						<body BGCOLOR="#FFFFFF" LINK="#FF0000" VLINK="#FF0000" ALINK="#FF0000">
					
							<table BORDER="0" WIDTH="500" CELLPADDING="10" CELLSPACING="10">
							  <tr>
							    <td BGCOLOR="#FF0000" colspan="2"><font size="5" color="#FFFFFF" face="Arial"><b>CGI-Error</b></font></td>
							  </tr>
							</table>
							<table BORDER="0" WIDTH="550" CELLPADDING="2" CELLSPACING="0">|;
								$sys_err[0]	and print "\n<tr>\n  <td valign='top' width='200'><font face='Arial' size='3'>Error Message</font></td>\n  <td><font face='Arial' size='3' color='#FF0000'><b>$sys_err[0]</b></font></td>\n</tr>\n";
								$sys_err[1]	and print "<tr>\n  <td width='200'><font face='Arial' size='2'>Error Code</font></td>\n  <td><font face='Arial' size='2'>$sys_err[1]</font></td>\n";
								$sys_err[2]	and print "<tr>\n  <td valign='top' width='200'><font face='Arial' size='2'>System Message</font></td>\n  <td><font face='Arial' size='2'>$sys_err[2]</font></td>\n";
								print qq|
							<tr>
							  <td colspan="2"><p>&nbsp</p><font face='Arial' size='2'>If the problem percist, please contact us with the above Information.</font><br>
									<font face='Arial' size='2'><a href="mailto:$systememail">$systememail</a></font></td>
							</tr>
							  </table>
						</body>
						</html>|;
		######################################
		### Save CGI ERR			
		##############################
		my ($ip);
		my (@outmsg) = @sys_err;
		my ($sec, $min, $hour, $day, $mon, $year, $dweek, $dyear, $daylight) = localtime(time());
		$year+=1900;
		$mon++;
		my ($time,$date) = ("$hour:$min:$sec","$mon-$day-$year");
		
		foreach $key (sort keys %in) {
			$outmsg[3] .= "$key=$in{$key},";
		}
		
		foreach $env (sort keys %ENV) {
			$outmsg[4] .= "$env=$ENV{$env},";
		}
		
		for (0..4){
			$outmsg[$_] =~ s/\n|\r/ /g;
			$outmsg[$_] =~ s/\|/ /g;
		}
		
		if ($ENV{'REMOTE_ADDR'}){
			$ip = $ENV{'REMOTE_ADDR'};
		}elsif ($ENV{'REMOTE_HOST'}){
			$ip = $ENV{'REMOTE_HOST'};
		}elsif ($ENV{'HTTP_CLIENT_IP'}){
			$ip = $ENV{'HTTP_CLIENT_IP'};
		}else{
			$ip = "Unknow";
		}
	
		(!$cfg{'cgierr_log_file'}) and ($cfg{'cgierr_log_file'} = './logs/cgierr.log');
		if (open (LOG, ">>$cfg{'cgierr_log_file'}")){;
			print LOG "$usr{'username'}|$outmsg[0]|$outmsg[1]|$outmsg[2]|$outmsg[3]|$outmsg[4]|$time|$date|$ip\n";
			close AUTH;
		}
	

	}else{
		print "<PRE>\n\nCGI ERROR\n==========================================\n";
					$sys_err[0]	and print "Error Message       : $sys_err[0]\n";
					$sys_err[1]	and print "Error Code          : $sys_err[1]\n";
					$sys_err[2]	and print "System Message      : $sys_err[2]\n";
					$0			and print "Script Location     : $0\n";
					$]			and print "Perl Version        : $]\n";
					$sid		and print "Session ID          : $sid\n";


		print "\nForm Variables IN\n-------------------------------------------\n";
		
		foreach $key (sort keys %in) {
			my $space = " " x (20 - length($key));
			$out_in .= "$key=$in{$key},";
			print "$key$space: $in{$key}\n";
		}
		
		print "\nForm Variables ERROR\n-------------------------------------------\n";
		foreach $key (sort keys %error) {
			my $space = " " x (20 - length($key));
			print "$key$space: $error{$key}\n";
		}
		
		print "\nEnvironment Variables\n-------------------------------------------\n";
		foreach $env (sort keys %ENV) {
			my $space = " " x (20 - length($env));
			$out_env .= "$env=$ENV{$env},";
			print "$env$space: $ENV{$env}\n";
		}
		
		print "\n</PRE>";

	}

	exit -1;
}

sub load_settings {
	my ($fname);
	
	if ($in{'e'}) {
		$fname = "../general.e".$in{'e'}.".cfg";
	}else {
		$fname = "../general.ex.cfg";
	}

	## general
	open (CFG, "<$fname") or &cgierr ("Unable to open: $fname,160,$!");
	LINE: while (<CFG>) {
		(/^#/)      and next LINE;
		(/^\s*$/)   and next LINE;
		$line = $_;
		$line =~ s/\n|\r//g;
		my ($td,$name,$value) = split (/\||\=/, $line,3);
		if ($td eq "conf") {
			$cfg{$name} = $value;
			next LINE;
		}elsif ($td eq "sys"){
			$sys{$name} = $value;
			next LINE;
		}
	}
	close CFG;

}

sub check_ip {
# --------------------------------------------------------
	my ($ip, $ipfilter) = @_;
	
	my (@ip) = split(/\./,$ip,4);
	my (@allowip) = split(/\,/,$ipfilter,4);
	
	for my $i(0..$#allowip){
		$allowip[$i] =~ s/\n|\r//g;
		$ok = 1;
		my (@ipfilter) = split(/\./,$allowip[$i],4);
		for my $x(0..3){
			if ($ip[$x] ne $ipfilter[$x] and $ipfilter[$x] ne 'x'){
				$ok = 0;
			}
		}
	}
	return $ok;
}


1;