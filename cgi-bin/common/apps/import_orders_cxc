#!/usr/bin/perl
#######################################################################
#######################################################################
#######################################################################

use DBI;
use DBIx::Connector;
use DBD::mysql;

# Load the form information and set the config file and userid.
local(%in) = &parse_form;
local(%config, %cfg, %usr);

# Required Libraries
# --------------------------------------------------------
eval {
	require ("../subs/auth.cgi");
	require ("../subs/sub.base.html.cgi");
};

if ($@) { &cgierr ("Error loading required Libraries",300,$@); }

eval { &main; };
if ($@) { &cgierr("Fatal error, 301, $@"); }



sub main {
	$|++;
	print "Content-type: text/html\n\n";

	# aplico la 3 porque este proceso fue diseñado para MUFAR
	# $in{'e'} = 7 if (!$in{'e'});
	
	&load_settings;

	$sys{'fmt_curr_decimal_digits'} = 2 if(!$sys{'fmt_curr_decimal_digits'});

	my $email_text = 'Cargado masivo de Ordenes -- '.localtime.'<br />';
	print "DIREKSYS($in{'e'}) - CARGA MASIVA DE ORDENES DE VENTA<br>";

	if($in{'psw'} eq 'devMX') {
		&connect_db;
		# paso 1 - revisar si en el folder configurado existen los 2 archivos y podrian ser del tipo csv | xls | xlsx
		# consultar con robert este detalle
		$dir = $cfg{'path_sanborns_layouts'};

		if(-e $dir) {
			
			# cambiar a nombre archivo dinamico
			$file_name2 = 'saldos.csv';
			$dir2 = $dir.$file_name2;
			print "abriendo: ".$dir2." <br>";;
			
			# lee archivo 2
			my ($registers2) = 0; # lo limitaremos al no de productos que obtuvimos arriba
			my (@office_desc);
			if(-r $dir2 and open (FILE, $dir2)) {
				my $id_customer = 0;
				my $orders_alias = '';
				my $order_net = 0;
				my $invoice_date = '';
				my $p_terms = 0;
				my $due_date = '';
				while (my $record = <FILE>) {
					chomp $record;
					$registers2++;
						
					my @fields2 = split "," , $record;
					#$id_customer = 100105;# ----------------------------------------------->customer ID
					$id_customer = $fields2[9];
					$orders_alias = $fields2[2];
					$order_net = $fields2[8];
					#$posted_date = $fields2[6];
					$invoice_date = $fields2[5];
					$p_terms = $fields2[3];
					$due_date = $fields2[6];
					
					#para pruebas en e3 MUFAR 100105
					
					

					#podriamos poner en la nota el nombre del archivo del que se obtuvo la informacion
					# $orders_notes = $file_name2;
					$orders_notes = "Orden generada automaticamente desde un layout por Direksys.";

					# por cada registro(tienda) se crea una orden
					# hasta  esta parte ya debo conocer el id del cliente y sus respectivos datos
					
					my ($sth_customer) = &Do_SQL("SELECT * FROM sl_customers WHERE ID_customers = '$id_customer';");
					$rec_customer = $sth_customer->fetchrow_hashref;

					# datos del envio de la tienda correspondiente
					my $sql_address = "SELECT * FROM cu_customers_addresses WHERE ID_customers='$id_customer' LIMIT 1;";
					my ($sth_customer_shpaddress) = &Do_SQL($sql_address);
					$rec_customershpaddress = $sth_customer_shpaddress->fetchrow_hashref;
					
					# revisar si el cliente existe
					# si existe entonces crea la orden con sus datos
					if (int($rec_customer->{'ID_customers'}) > 0) {
						##si hay shpaddress entonces shpaddress sino entonces la del customer
						if($rec_customershpaddress->{'ID_customers_addresses'}) {
							$rec_customer->{'Address1'} = $rec_customershpaddress->{'Address1'};
							$rec_customer->{'Address2'} = $rec_customershpaddress->{'Address2'};
							$rec_customer->{'Address3'} = $rec_customershpaddress->{'Address2'};
							$rec_customer->{'Urbanization'} = $rec_customershpaddress->{'Urbanization'};
							$rec_customer->{'City'} = $rec_customershpaddress->{'City'};
							$rec_customer->{'State'} = $rec_customershpaddress->{'State'};
							$rec_customer->{'Zip'} = $rec_customershpaddress->{'Zip'};
							$rec_customer->{'Country'} = $rec_customershpaddress->{'Country'};
						}

						$sth_order = &Do_SQL("INSERT INTO sl_orders SET ID_orders=NULL,  trackordernumber=NULL,  ID_customers=".$id_customer.", ID_orders_alias='".$orders_alias."'
							,  Pterms=(SELECT Name FROM sl_terms WHERE CreditDays=".$p_terms." AND Type='Sales' LIMIT 1)
							,  Ptype='Deposit'
							,  id_customers_addresses='".$rec_customershpaddress->{'ID_customers_addresses'}."'
							,  Address1='".$rec_customer->{'Address1'}."'
							,  Address2='".$rec_customer->{'Address2'}."'
							,  Address3='".$rec_customer->{'Address3'}."'
							,  Urbanization='".$rec_customer->{'Urbanization'}."'
							,  City='".$rec_customer->{'City'}."'
							,  State='".$rec_customer->{'State'}."'
							,  Zip='".$rec_customer->{'Zip'}."'
							,  Country='".$rec_customer->{'Country'}."'
							,  BillingNotes=NULL,  shp_type=1,  shp_name=NULL
							,  shp_Address1='".$rec_customer->{'Address1'}."'
							,  shp_Address2='".$rec_customer->{'Address2'}."'
							,  shp_Address3='".$rec_customer->{'Address3'}."'
							,  shp_Urbanization='".$rec_customer->{'Urbanization'}."'
							,  shp_City='".$rec_customer->{'City'}."'
							,  shp_State='".$rec_customer->{'State'}."'
							,  shp_Zip='".$rec_customer->{'Zip'}."'
							,  shp_Country='".$rec_customer->{'Country'}."'
							,  shp_Notes=NULL,  ID_zones=0,  OrderNotes='$orders_notes'
							,  OrderQty=1,  OrderShp=0.00,  OrderDisc=0.00,  OrderTax=0,  OrderNet=$order_net, ID_salesorigins = 5,  /*PostedDate=DATE_SUB('$due_date',INTERVAL $p_terms DAY),*/  ID_pricelevels=99,  dayspay=NULL,  ID_orders_related=0
							,  question1=NULL,  answer1=NULL,  question2=NULL,  answer2=NULL,  question3=NULL,  answer3=NULL,  question4=NULL,  answer4=NULL,  question5=NULL,  answer5=NULL,  repeatedcustomer='Yes',  Coupon=0,  Flags=0,  DNIS=0,  ID_salesorigins=0,  ID_mediacontracts=0,  DIDS7=0,  Letter=0,  ID_warehouses=0,  first_call=NULL
							,  language='spanish',  StatusPrd='None',  StatusPay='None',  Status='Shipped',  Date='$invoice_date',  Time=CURTIME(),  ID_admin_users=1");
						$id_orders_new = $sth_order->{'mysql_insertid'};
						if (!$id_orders_new){
							print "No se insertó la orden";
							exit;
						}
						
						
						print "<br>SE CREO LA ORDEN <strong>$id_orders_new</strong> PARA EL CLIENTE <strong>$id_customer</strong>, EN EL SISTEMA.<br>";
						# print "<br>QUERY USADA PARA ADDRESS: $sql_address<br>";

						$email_text .= "Se creo la Oorden No.: $id_orders_new para el Cliente ID: $id_customer, en el sistema.<br />";

						# de 1 hasta el numero de productos indicados arriba, se hace el recorrido de cada producto agregando cuantos quiere para esta tienda de cada uno
						# Inserta los productos	
						my $qty;
						my $total = 0;
						my $tax = 0;
						my $SalePrice = 0;
						my $ID_products = 100000000;
						
						my $related_id_products = 600001115;
						my $serv_qty = 1;
						my $serv_tax = 0;
						my $serv_id = 1115;
						
						my $total_OrderQty = 0;
						my $total_OrderTax = 0;
						my $total_OrderNet = 0;					

						
							#$qty = int($fields[$i]);
							#
							#$product_price[$i] =~ s/ \$//g;
							#
							#$SalePrice = $product_price[$i] * $qty;
							#$tax = $SalePrice * ($product_tax_percent[$i] / 100);

							### para que pueda insertar la cantidad debe ser ,mayor que cero
							#if($qty > 0) {

								## una validacion mas, confirmamos que el producto exista y este activo
								##my $id_parts = $product[$i];
								##$sth_val_parts = &Do_SQL("SELECT (SELECT SPrice FROM sl_customers_parts WHERE ID_customers=100105 AND ID_parts=sl_skus.ID_products)as SPrice, sl_skus.ID_sku_products as ID_parts FROM sl_skus WHERE 1 AND sl_skus.UPC='".$id_parts."' AND sl_skus.Status='Active'");
								#$sth_val_parts = &Do_SQL("SELECT * FROM sl_services WHERE 1 AND sl_services.ID_services='".$serv_id."';");
								# 
								#$rec_parts = $sth_val_parts->fetchrow_hashref;
								#
								#if (int($rec_parts->{'ID_services'}) > 0) {

									$sth_parts = &Do_SQL("INSERT INTO sl_orders_products SET
										ID_orders_products = NULL
										, ID_products=".$ID_products."
										, ID_orders=".$id_orders_new."
										, ID_packinglist=0
										, Related_ID_products=".$related_id_products."
										, Quantity=".$serv_qty."
										, SalePrice=".$fields2[8]."
										, Shipping=0
										, Cost=0
										, Tax=".$serv_tax."
										, Tax_percent=".($serv_tax / 100)."
										, Discount=0
										, FP=0
										/*, ShpDate=DATE_SUB('$due_date',INTERVAL $p_terms DAY)
										, PostedDate=DATE_SUB('$due_date',INTERVAL $p_terms DAY)*/
										, Status='Active'
										, Date=Curdate()
										, Time=NOW()
										, ID_admin_users=1");
									
									my ($sth_ord_payments) = &Do_SQL("INSERT INTO `sl_orders_payments` (`ID_orders_payments`, `ID_orders`, `Type`, `PmtField1`, `PmtField2`, `PmtField3`, `PmtField4`, `PmtField5`, `PmtField6`, `PmtField7`, `PmtField8`, `PmtField9`, `Amount`, `Reason`, `Paymentdate`, `AuthCode`, `AuthDateTime`, `Captured`, `CapDate`, `PostedDate`, `Status`, `Date`, `Time`, `ID_admin_users`) VALUES
									(NULL, '".$id_orders_new."', 'Deposit', '', '', '', '', '', '', '', '', '', '".$order_net."', 'Sale', '".$due_date."', '', '', NULL, NULL,'0000-00-00', 'Approved', /*'".$invoice_date."'*/ CURDATE(), 'CURTIME()', 1 )");
									$id_orders_payments = $sth_ord_payments->{'mysql_insertid'};
									
									#$total_OrderQty += $qty;
									#$total_OrderTax += $tax;
									#$total_OrderNet += $SalePrice;

									#if ($rec_parts->{'SPrice'} == $product_price[$i]){
									#	print 'SE AGREGAN <strong>'.$qty.'</strong> PIEZAS DEL PRODUCTO <strong>"'.$cve_product[$i].'"</strong> COSTO DIREKSYS <strong>'.&format_price($rec_parts->{'SPrice'}).'</strong> COSTO NUEVO <strong>'.&format_price($product_price[$i]).'</strong> A LA ORDEN.';
									#}else{
									#	print '<br><span style="color:red;">SE AGREGAN <strong>'.$qty.'</strong> PIEZAS DEL PRODUCTO <strong>"'.$cve_product[$i].'"</strong> COSTO DIREKSYS <strong>'.&format_price($rec_parts->{'SPrice'}).'</strong> COSTO NUEVO <strong>'.&format_price($product_price[$i]).'</strong> A LA ORDEN.</span>';
									#}
									#
									#$email_text .= 'Se agregan '.$qty.' piezas del producto <strong>"'.$cve_product[$i].'"</strong> a la Orden '.$id_orders_new.'.<br />';


									# $ID_products++;
									##$ID_products+=1000000;									
								&add_order_notes_by_type_admin($id_orders_new,'Cliente: '.$fields2[0].', '.'Nombre: '.$fields2[1].', '.'Id Factura: '.$fields2[2].', '.'Condiciones: '.$fields2[3].', '.'Moneda: '.$fields2[4].', '.'F. Factura: '.$fields2[5].', '.'F. Vencimiento: '.$fields2[6].', '.'I. Original: '.$fields2[7].', '.'Saldo: '.$fields2[8].', '.'Id Cust. Direrksys: '.$fields2[9],'Low');
								#}else {
								#	print '<br>NO FUE POSIBLE AGREGAR EL PRODUCTO "'.$product[$i].'" A LA ORDEN.';
								#	$email_text .= 'No fue posible agregar el producto "'.$cve_product[$i].'" a la Orden '.$id_orders_new.'.<br />';
								#
								#}

							#}

						

						# suma las catidades de productos de una misma tienda para generar una orden por tienda
						# hay q sumar y hacer un update sobre sl_orders y listo
						#print '<br>total_OrderQty = '.$total_OrderQty;
						#print '<br>total_OrderTax = '.$total_OrderTax;
						#print '<br>total_OrderNet = '.$total_OrderNet;
						#
						#$email_text .= 'Los totales de la Orden '.$id_orders_new.'. son los siguientes:<br />';
						#$email_text .= 'OrderQty = '.$total_OrderQty.' <br />';
						#$email_text .= 'OrderTax = '.$total_OrderTax.' <br />';
						#$email_text .= 'OrderNet = '.$total_OrderNet.' <br />';
						
						
						
						#&Do_SQL("UPDATE sl_orders SET OrderQty=$total_OrderQty, OrderNet=$total_OrderNet WHERE ID_orders=".$id_orders_new);
						
						
					} else {
						print "EL CLIENTE CON ID $id_customer NO FUE ENCONTRADO EN EL SISTEMA.<br>";
						$email_text .= "El cliente con id $id_customer no fue encontrado en el sistema.<br>";

					}

					print "<br>";
					if ($registers2 > 100000) {
						exit;
					}
					
				}
				print "<br>";

				if($registers2 > 0) {
					print "$registers2 records found in dir2";
				}else {
					print "no records found in dir2";
				}

				close FILE;
			}else{
				print "<span style='color:red;'>$dir2 no encontrado </span><br>";
			}
		 
		}else{
			print "<span style='color:red;'>dir '$dir' not found </span><br>";
			$email_text .= "El archivo '$dir' no fue encontrado.<br>";

		}

		&disconnect_db;

	  	&send_text_mail($cfg{'from_email'},'eosornio@inovaus.com',"Resumen de Carga masiva de ordenes.", $email_text);
		
	}else{
		print "UNAUTH...";
	}


	# return;
}

#########################################################
##			Query				##
##########################################################
sub parse_form {
# --------------------------------------------------------
	my (@pairs, %in);
	my ($buffer, $pair, $name, $value);

	if ($ENV{'REQUEST_METHOD'} eq 'GET') {
		@pairs = split(/&/, $ENV{'QUERY_STRING'});
	}elsif ($ENV{'REQUEST_METHOD'} eq 'POST') {
		read(STDIN, $buffer, $ENV{'CONTENT_LENGTH'});
 		@pairs = split(/&/, $buffer);
	}else {
		&cgierr ("This script must be called from the Web\nusing either GET or POST requests\n\n");
	}
	PAIR: foreach $pair (@pairs) {
		($name, $value) = split(/=/, $pair);

		$name =~ tr/+/ /;
		$name =~ s/%([a-fA-F0-9][a-fA-F0-9])/pack("C", hex($1))/eg;
		$name = lc($name);

		$value =~ tr/+/ /;
		$value =~ s/%([a-fA-F0-9][a-fA-F0-9])/pack("C", hex($1))/eg;

		$value =~ s/^\s+//g;
		$value =~ s/\s+$//g;

		#$value =~ s/\r//g;
		$value =~ s/<!--(.|\n)*-->//g;			# Remove SSI.
		if ($value eq "---") { next PAIR; }		# This is used as a default choice for select lists and is ignored.
		(exists $in{$name}) ?
			($in{$name} .= "|$value") :		# If we have multiple select, then we tack on
			($in{$name}  = $value);			# using the ~~ as a seperator.
	}
	return %in;
}

##################################################################
#     CGIERR   	#
##################################################################
sub cgierr {
# --------------------------------------------------------
# Last Modified on: 11/10/08 11:58:21
# Last Modified by: MCC C. Gabriel Varela S: Se corrige la forma de mostrar la fecha
	my (@sys_err) = @_;
	print "Content-type: text/html\n\n";

	my ($key,$env,$out_in,$out_env);
	if (!$cfg{'cd'}){
		print qq|
						<head>
										<title>CGI - ERROR</title>
						</head>					
						<body BGCOLOR="#FFFFFF" LINK="#FF0000" VLINK="#FF0000" ALINK="#FF0000">
					
							<table BORDER="0" WIDTH="500" CELLPADDING="10" CELLSPACING="10">
							  <tr>
							    <td BGCOLOR="#FF0000" colspan="2"><font size="5" color="#FFFFFF" face="Arial"><b>CGI-Error</b></font></td>
							  </tr>
							</table>
							<table BORDER="0" WIDTH="550" CELLPADDING="2" CELLSPACING="0">|;
								$sys_err[0]	and print "\n<tr>\n  <td valign='top' width='200'><font face='Arial' size='3'>Error Message</font></td>\n  <td><font face='Arial' size='3' color='#FF0000'><b>$sys_err[0]</b></font></td>\n</tr>\n";
								$sys_err[1]	and print "<tr>\n  <td width='200'><font face='Arial' size='2'>Error Code</font></td>\n  <td><font face='Arial' size='2'>$sys_err[1]</font></td>\n";
								$sys_err[2]	and print "<tr>\n  <td valign='top' width='200'><font face='Arial' size='2'>System Message</font></td>\n  <td><font face='Arial' size='2'>$sys_err[2]</font></td>\n";
								print qq|
							<tr>
							  <td colspan="2"><p>&nbsp</p><font face='Arial' size='2'>If the problem percist, please contact us with the above Information.</font><br>
									<font face='Arial' size='2'><a href="mailto:$systememail">$systememail</a></font></td>
							</tr>
							  </table>
						</body>
						</html>|;
		######################################
		### Save CGI ERR			
		##############################
		my ($ip);
		my (@outmsg) = @sys_err;
		my ($sec, $min, $hour, $day, $mon, $year, $dweek, $dyear, $daylight) = localtime(time());
		$year+=1900;
		$mon++;
		my ($time,$date) = ("$hour:$min:$sec","$mon-$day-$year");
		
		foreach $key (sort keys %in) {
			$outmsg[3] .= "$key=$in{$key},";
		}
		
		foreach $env (sort keys %ENV) {
			$outmsg[4] .= "$env=$ENV{$env},";
		}
		
		for (0..4){
			$outmsg[$_] =~ s/\n|\r/ /g;
			$outmsg[$_] =~ s/\|/ /g;
		}
		
		if ($ENV{'REMOTE_ADDR'}){
			$ip = $ENV{'REMOTE_ADDR'};
		}elsif ($ENV{'REMOTE_HOST'}){
			$ip = $ENV{'REMOTE_HOST'};
		}elsif ($ENV{'HTTP_CLIENT_IP'}){
			$ip = $ENV{'HTTP_CLIENT_IP'};
		}else{
			$ip = "Unknow";
		}
	
		(!$cfg{'cgierr_log_file'}) and ($cfg{'cgierr_log_file'} = './logs/cgierr.log');
		if (open (LOG, ">>$cfg{'cgierr_log_file'}")){;
			print LOG "$usr{'username'}|$outmsg[0]|$outmsg[1]|$outmsg[2]|$outmsg[3]|$outmsg[4]|$time|$date|$ip\n";
			close AUTH;
		}
	

	}else{
		print "<PRE>\n\nCGI ERROR\n==========================================\n";
					$sys_err[0]	and print "Error Message       : $sys_err[0]\n";
					$sys_err[1]	and print "Error Code          : $sys_err[1]\n";
					$sys_err[2]	and print "System Message      : $sys_err[2]\n";
					$0			and print "Script Location     : $0\n";
					$]			and print "Perl Version        : $]\n";
					$sid		and print "Session ID          : $sid\n";


		print "\nForm Variables IN\n-------------------------------------------\n";
		
		foreach $key (sort keys %in) {
			my $space = " " x (20 - length($key));
			$out_in .= "$key=$in{$key},";
			print "$key$space: $in{$key}\n";
		}
		
		print "\nForm Variables ERROR\n-------------------------------------------\n";
		foreach $key (sort keys %error) {
			my $space = " " x (20 - length($key));
			print "$key$space: $error{$key}\n";
		}
		
		print "\nEnvironment Variables\n-------------------------------------------\n";
		foreach $env (sort keys %ENV) {
			my $space = " " x (20 - length($env));
			$out_env .= "$env=$ENV{$env},";
			print "$env$space: $ENV{$env}\n";
		}
		
		print "\n</PRE>";

	}

	exit -1;
}

sub load_settings {
	my ($fname);
	
	if ($in{'e'}) {
		$fname = "../general.e".$in{'e'}.".cfg";
	}else {
		$fname = "../general.ex.cfg";
	}

	## general
	open (CFG, "<$fname") or &cgierr ("Unable to open: $fname,160,$!");
	LINE: while (<CFG>) {
		(/^#/)      and next LINE;
		(/^\s*$/)   and next LINE;
		$line = $_;
		$line =~ s/\n|\r//g;
		my ($td,$name,$value) = split (/\||\=/, $line,3);
		if ($td eq "conf") {
			$cfg{$name} = $value;
			next LINE;
		}elsif ($td eq "sys"){
			$sys{$name} = $value;
			next LINE;
		}
	}
	close CFG;

}

sub check_ip {
# --------------------------------------------------------
	my ($ip, $ipfilter) = @_;
	
	my (@ip) = split(/\./,$ip,4);
	my (@allowip) = split(/\,/,$ipfilter,4);
	
	for my $i(0..$#allowip){
		$allowip[$i] =~ s/\n|\r//g;
		$ok = 1;
		my (@ipfilter) = split(/\./,$allowip[$i],4);
		for my $x(0..3){
			if ($ip[$x] ne $ipfilter[$x] and $ipfilter[$x] ne 'x'){
				$ok = 0;
			}
		}
	}
	return $ok;
}


1;